#!/bin/env pypenv
# -*- Mode: Python; tab-width: 4; py-indent-offset: 4; -*-
#
# this is b8points.py; contains control points and spline interpolated points for 36? of the B8 stim;
# at the moment, rotation is incorporated here as a list for rotation later at sprite end.
# i will deal with this later b/c i want (for plines) points for rotations.

 
from Numeric import *
from random import *

def get_b8points(myWidth,smp):
    # Overlap vertices are directly input here. i.e. if there are n vertices,
    # then vertices 1 and 2 are repeated after n, and vertex n is repeated before 1
    # vertices were orginally made for RF dia of 4.0; we want to scale stimuli by (rfsize)/4
    spritesize = myWidth
    scale=float(spritesize)/4.0

    numstims = 36
    pre_rots = arange(360)
    rots = pre_rots[::45]

    nvrt =[12,14,12,11,11,12,12,14,18,16,16,20,20,18,22,12,16,16,16,20,20,20,24,16,20,24,24,28,32,12,12,14,14,12,18,14] #each shape's numverts
##     stm2=[24,29]
##     rot2=list(rots[0:2])*len(stm2)
##     rot2.sort()
##     stm4=[1,3,26]
##     rot4=list(rots[0:4])*len(stm4)
##     rot4.sort()
##     stm8=[2]+list(arange(4,24))+[25,27,28]+list(arange(30,37))
##     rot8=list(rots)*len(stm8)
##     rot8.sort()
##     stmlist = stm2*2+stm4*4+stm8*8
##     rotlist = rot2+rot4+rot8
##     #this is for subset stimuli 1-29
##     sub_stm8 =[2]+list(arange(4,24))+[25,27,28]
##     sub_rot8=list(rots)*len(sub_stm8)
##     sub_rot8.sort()
##     sub_stmlist = stm2*2+stm4*4+sub_stm8*8
##     sub_rotlist = rot2+rot4+sub_rot8

    eight=[8]
    four=[4]
    two=[2]
    tempnumrot_list=[four,eight,four,eight*20,two,eight,four,eight*2,two,eight*7]
    numrot_list=[]
    for dummy in tempnumrot_list:
        numrot_list.extend(dummy)
        


    Xvrt = zeros((numstims, max(nvrt)+3), Float) #this is from vertices2.txt
    Yvrt = zeros((numstims, max(nvrt)+3), Float)

    Xvrt[0,0:nvrt[0]+3]=asarray([-0.266,-0.373,-0.266,-0.069,0.0,0.069,0.266,0.373,0.266,0.069,0.0,-0.069,-0.266,-0.373,-0.266])*scale
    Yvrt[0,0:nvrt[0]+3]=asarray([-0.828,0.0,0.828,1.37,1.6,1.37,0.828,0.0,-0.828,-1.37,-1.6,-1.37,-0.828,0.0,0.828])*scale

    Xvrt[1,0:nvrt[1]+3]=asarray([-0.477,-0.438,-0.277,-0.182,-0.102,0.0,0.102,0.182,0.277,0.438,0.477,0.393,0.0,-0.393,-0.477,-0.438,-0.277])*scale
    Yvrt[1,0:nvrt[1]+3]=asarray([-0.543,0.195,0.916,1.19,1.387,1.6,1.387,1.19,0.916,0.195,-0.543,-1.278,-1.6,-1.278,-0.543,0.195,0.916])*scale

    Xvrt[2,0:nvrt[2]+3]=asarray([-0.571,-0.64,-0.571,-0.369,0.0,0.369,0.571,0.64,0.571,0.369,0.0,-0.369,-0.571,-0.64,-0.571])*scale
    Yvrt[2,0:nvrt[2]+3]=asarray([-0.689,0.0,0.689,1.354,1.6,1.354,0.689,0.0,-0.689,-1.354,-1.6,-1.354,-0.689,0.0,0.689])*scale

    Xvrt[3,0:nvrt[3]+3]=asarray([0.467,-0.082,-0.289,0.0,0.1,0.351,0.74,1.2,1.483,1.6,1.278,0.467,-0.082,-0.289])*scale
    Yvrt[3,0:nvrt[3]+3]=asarray([-0.294,0.186,0.884,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.393,-0.294,0.186,0.884])*scale

    Xvrt[4,0:nvrt[4]+3]=asarray([-1.278,-1.6,-1.483,-1.2,-0.74,-0.351,-0.1,0.0,0.289,0.082,-0.467,-1.278,-1.6,-1.483])*scale
    Yvrt[4,0:nvrt[4]+3]=asarray([-0.393,0.0,0.283,0.4,0.5,0.751,1.14,1.6,0.884,0.186,-0.294,-0.393,0.0,0.283])*scale

    Xvrt[5,0:nvrt[5]+3]=asarray([0.13,-0.123,-0.167,0.0,0.054,0.257,0.605,1.071,1.216,1.131,0.85,0.57,0.13,-0.123,-0.167])*scale
    Yvrt[5,0:nvrt[5]+3]=asarray([-0.542,0.149,0.883,1.6,0.983,0.401,-0.111,-0.516,-0.848,-1.131,-1.25,-1.131,-0.542,0.149,0.883])*scale

    Xvrt[6,0:nvrt[6]+3]=asarray([-1.071,-0.605,-0.257,-0.054,0.0,0.167,0.123,-0.13,-0.57,-0.85,-1.131,-1.216,-1.071,-0.605,-0.257])*scale
    Yvrt[6,0:nvrt[6]+3]=asarray([-0.516,-0.111,0.401,0.983,1.6,0.883,0.149,-0.542,-1.131,-1.25,-1.131,-0.848,-0.516,-0.111,0.401])*scale

    Xvrt[7,0:nvrt[7]+3] = asarray([-0.397,-0.533,-0.397,-0.176,0.0,0.122,0.468,0.988,1.6,0.988,0.468,0.122,0.0,-0.176,-0.397,-0.533,-0.397])*scale
    Yvrt[7,0:nvrt[7]+3] = asarray([-0.843,0.0,0.843,1.333,1.6,0.988,0.468,0.122,0.0,-0.122,-0.468,-0.988,-1.6,-1.333,-0.843,0.0,0.843])*scale

    Xvrt[8,0:nvrt[8]+3] = asarray([-0.397,-0.533,-0.397,-0.176,0.0,0.1,0.351,0.74,1.2,1.483,1.6,1.483,1.2,0.74,0.351,0.1,0.0,-0.176,-0.397,-0.533,-0.397])*scale
    Yvrt[8,0:nvrt[8]+3] = asarray([-0.843,0.0,0.843,1.333,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-1.333,-0.843,0.0,0.843])*scale

    Xvrt[9,0:nvrt[9]+3] =asarray([-0.571,-0.575,-0.381,-0.212,0.0,0.122,0.468,0.988,1.6,1.14,0.752,0.492,0.4,0.283,0.0,-0.369,-0.571,-0.575,-0.381])*scale
    Yvrt[9,0:nvrt[9]+3] =asarray([-0.605,0.172,0.923,1.273,1.6,0.988,0.468,0.122,0.0,-0.092,-0.352,-0.74,-1.2,-1.483,-1.6,-1.354,-0.605,0.172,0.923])*scale

    Xvrt[10,0:nvrt[10]+3] =asarray([-0.575,-0.571,-0.369,0.0,0.283,0.4,0.492,0.752,1.14,1.6,0.988,0.468,0.122,0.0,-0.212,-0.381,-0.575,-0.571,-0.369])*scale
    Yvrt[10,0:nvrt[10]+3] =asarray([-0.172,0.605,1.354,1.6,1.483,1.2,0.74,0.352,0.092,0.0,-0.122,-0.468,-0.988,-1.6,-1.273,-0.923,-0.172,0.605,1.354])*scale

    Xvrt[11,0:nvrt[11]+3] =asarray([-0.571,-0.575,-0.381,-0.212,0.0,0.1,0.351,0.74,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.383,0.0,-0.369,-0.571,-0.575,-0.381])*scale
    Yvrt[11,0:nvrt[11]+3]=asarray([-0.605,0.172,0.923,1.273,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.283,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.354,-0.605,0.172,0.923])*scale

    Xvrt[12,0:nvrt[12]+3]=asarray([-0.575,-0.571,-0.369,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.74,0.351,0.1,0.0,-0.212,-0.381,-0.575,-0.571,-0.369])*scale
    Yvrt[12,0:nvrt[12]+3]=asarray([-0.172,0.605,1.354,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-1.273,-0.923,-0.172,0.605,1.354])*scale

    Xvrt[13,0:nvrt[13]+3]=asarray([-0.571,-0.64,-0.571,-0.369,0.0,0.283,0.4,0.492,0.752,1.14,1.6,1.14,0.752,0.492,0.4,0.283,0.0,-0.369,-0.571,-0.64,-0.571])*scale
    Yvrt[13,0:nvrt[13]+3]=asarray([-0.689,0.0,0.689,1.354,1.6,1.483,1.2,0.74,0.352,0.092,0.0,-0.092,-0.352,-0.74,-1.2,-1.483,-1.6,-1.354,-0.689,0.0,0.689])*scale

    Xvrt[14,0:nvrt[14]+3]=asarray([-0.571,-0.64,-0.571,-0.369,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.369,-0.571,-0.64,-0.571])*scale
    Yvrt[14,0:nvrt[14]+3]=asarray([-0.689,0.0,0.689,1.354,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.354,-0.689,0.0,0.684])*scale

    Xvrt[15,0:nvrt[15]+3]=asarray([-0.651,-0.294,-0.075,0.0,0.075,0.294,0.651,1.131,0.612,0.0,-0.612,-1.131,-0.651,-0.294,-0.075])*scale
    Yvrt[15,0:nvrt[15]+3]=asarray([-0.546,0.122,0.846,1.6,0.846,0.122,-0.546,-1.131,-0.785,-0.663,-0.785,-1.131,-0.546,0.122,0.846])*scale

    Xvrt[16,0:nvrt[16]+3]=asarray([-0.751,-0.467,-0.35,-0.393,-0.283,0.0,0.283,0.393,0.35,0.467,0.751,1.131,0.612,0.0,-0.612,-1.131,-0.751,-0.467,-0.35])*scale
    Yvrt[16,0:nvrt[16]+3]=asarray([-0.688,0.102,0.505,1.122,1.483,1.6,1.483,1.122,0.505,-0.102,-0.688,-1.131,-0.785,-0.663,-0.785,-1.131,-0.688,0.102,0.505])*scale

    Xvrt[17,0:nvrt[17]+3]=asarray([-0.651,-0.294,-0.075,0.0,0.054,0.257,0.605,1.071,1.248,1.131,0.85,0.57,0.179,-0.282,-0.742,-1.131,-0.651,-0.294,-0.075])*scale
    Yvrt[17,0:nvrt[17]+3]=asarray([-0.546,0.122,0.846,1.6,0.983,0.401,-0.111,-0.516,-0.848,-1.131,-1.25,-1.131,-0.871,-0.78,-0.871,-1.131,-0.546,0.122,0.846])*scale

    Xvrt[18,0:nvrt[18]+3]=asarray([-0.605,-0.257,-0.054,0.0,0.075,0.294,0.654,1.131,0.742,0.282,-0.179,-0.571,-0.85,-1.131,-1.248,-1.071,-0.605,-0.257,-0.054])*scale
    Yvrt[18,0:nvrt[18]+3]=asarray([-0.111,0.401,0.983,1.6,0.846,0.122,-0.546,-1.131,-0.871,-0.78,-0.871,-1.131,-1.25,-1.131,-0.848,-0.516,-0.111,0.401,0.983])*scale

    Xvrt[19,0:nvrt[19]+3]=asarray([-0.605,-0.257,-0.054,0.0,0.054,0.257,0.605,1.071,1.248,1.131,0.85,0.57,0.308,0.0,-0.308,-0.57,-0.85,-1.131,-1.248,-1.071,-0.605,-0.257,-0.054])*scale
    Yvrt[19,0:nvrt[19]+3]=asarray([-0.111,0.401,0.983,1.6,0.983,0.401,-0.111,-0.516,-0.848,-1.131,-1.25,-1.131,-0.957,-0.896,-0.957,-1.131,-1.25,-1.131,-0.848,-0.516,-0.111,0.401,0.983])*scale

    Xvrt[20,0:nvrt[20]+3]=asarray([-0.727,-0.487,-0.373,-0.393,-0.283,0.0,0.283,0.393,0.35,0.467,0.751,1.131,0.742,0.282,-0.179,-0.571,-0.85,-1.131,-1.248,-1.071,-0.727,-0.487,-0.373])*scale
    Yvrt[20,0:nvrt[20]+3]=asarray([-0.203,0.198,0.652,1.122,1.483,1.6,1.483,1.122,0.505,-0.102,-0.688,-1.131,-0.871,-0.78,-0.871,-1.131,-1.25,-1.131,-0.848,-0.516,-0.203,0.198,0.652])*scale

    Xvrt[21,0:nvrt[21]+3]=asarray([-0.751,-0.467,-0.35,-0.393,-0.283,0.0,0.283,0.393,0.373,0.487,0.727,1.071,1.248,1.131,0.85,0.57,0.179,-0.282,-0.742,-1.131,-0.751,-0.467,-0.35])*scale
    Yvrt[21,0:nvrt[21]+3]=asarray([-0.688,0.102,0.505,1.122,1.483,1.6,1.483,1.122,0.652,0.198,-0.203,-0.516,-0.848,-1.131,-1.25,-1.131,-0.871,-0.78,-0.871,-1.131,-0.688,0.102,0.505])*scale

    Xvrt[22,0:nvrt[22]+3]=asarray([-0.727,-0.487,-0.373,-0.393,-0.283,0.0,0.283,0.393,0.373,0.487,0.727,1.071,1.248,1.131,0.85,0.57,0.308,0.0,-0.308,-0.57,-0.85,-1.131,-1.248,-1.071,-0.727,-0.487,-0.373])*scale
    Yvrt[22,0:nvrt[22]+3]=asarray([-0.203,0.198,0.652,1.122,1.483,1.6,1.483,1.122,0.652,0.198,-0.203,-0.516,-0.848,-1.131,-1.25,-1.131,-0.957,-0.896,-0.957,-1.131,-1.25,-1.131,-0.848,-0.516,-0.203,0.198,0.652])*scale

    Xvrt[23,0:nvrt[23]+3]=asarray([-0.988,-1.6,-0.988,-0.468,-0.122,0.0,0.122,0.468,0.988,1.6,0.988,0.468,0.122,0.0,-0.122,-0.468,-0.988,-1.6,-0.988])*scale
    Yvrt[23,0:nvrt[23]+3]=asarray([-0.122,0.0,0.122,0.468,0.988,1.6,0.988,0.468,0.122,0.0,-0.122,-0.468,-0.988,-1.6,-0.988,-0.468,-0.122,0.0,0.122])*scale

    Xvrt[24,0:nvrt[24]+3]=asarray([-1.14,-1.6,-0.988,-0.468,-0.122,0.0,0.122,0.468,0.988,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-0.988])*scale
    Yvrt[24,0:nvrt[24]+3]=asarray([-0.1,0.0,0.122,0.468,0.988,1.6,0.988,0.468,0.122,0.0,-0.1,-0.351,-0.74,-1.2,-1.483,-1.6,-1.483,-1.2,-0.74,-0.351,-0.1,0.0,0.122])*scale

    Xvrt[25,0:nvrt[25]+3]=asarray([-1.483,-1.6,-1.483,-1.2,-0.74,-0.351,-0.1,0.0,0.1,0.351,0.74,1.2,1.483,1.6,1.483,1.2,0.74,0.351,0.1,0.0,-0.1,-0.351,-0.74,-1.2,-1.483,-1.6,-1.483])*scale
    Yvrt[25,0:nvrt[25]+3]=asarray([-0.283,0.0,0.283,0.4,0.5,0.751,1.14,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-1.14,-0.751,-0.5,-0.4,-0.283,0.0,0.283])*scale

    Xvrt[26,0:nvrt[26]+3]=asarray([-1.14,-1.6,-0.988,-0.468,-0.122,0.0,0.1,0.351,0.74,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-0.988])*scale
    Yvrt[26,0:nvrt[26]+3]=asarray([-0.1,0.0,0.122,0.468,0.988,1.6,1.14,0.751,0.5,0.4,0.283,0.0,-0.283,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.483,-1.2,-0.74,-0.351,-0.1,0.0,0.122])*scale

    Xvrt[27,0:nvrt[27]+3]=asarray([-1.483,-1.6,-1.483,-1.2,-0.894,-0.635,-0.461,-0.4,-0.283,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.74,0.351,0.1,0.0,-0.1,-0.351,-0.74,-1.2,-1.483,-1.6,-1.483])*scale
    Yvrt[27,0:nvrt[27]+3]=asarray([-0.283,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.5,-0.751,-1.14,-1.6,-1.14,-0.751,-0.5,-0.4,-0.283,0.0,0.283])*scale

    Xvrt[28,0:nvrt[28]+3]=asarray([-1.483,-1.6,-1.483,-1.2,-0.894,-0.635,-0.461,-0.4,-0.283,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.483])*scale
    Yvrt[28,0:nvrt[28]+3]=asarray([-0.283,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.283,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.483,-1.2,-0.894,-0.635,-0.461,-0.4,-0.283,0.0,0.283])*scale

    Xvrt[29,0:nvrt[29]+3]=asarray([-0.575,-0.571,0.0,1.131,1.6,1.2,0.74,0.351,0.1,0.0,-0.212,-0.381,-0.575,-0.571,0.0])*scale
    Yvrt[29,0:nvrt[29]+3]=asarray([-0.172,0.605,1.6,1.131,0.0,-0.4,-0.5,-0.751,-1.14,-1.6,-1.273,-0.923,-0.172,0.605,1.6])*scale
    
    Xvrt[30,0:nvrt[30]+3]=asarray([-0.571,-0.575,-0.381,-0.212,0.0,0.1,0.351,0.74,1.2,1.6,1.131,0.0,-0.571,-0.575,-0.381])*scale
    Yvrt[30,0:nvrt[30]+3]=asarray([-0.605,0.172,0.923,1.273,1.6,1.14,0.751,0.5,0.4,0.0,-1.131,-1.6,-0.605,0.172,0.923])*scale

    Xvrt[31,0:nvrt[31]+3]=asarray([-0.571,-0.64,-0.571,0.0,1.131,1.6,1.2,0.894,0.635,0.461,0.4,0.283,0.0,-0.369,-0.571,-0.64,-0.571])*scale
    Yvrt[31,0:nvrt[31]+3]=asarray([-0.689,0.0,0.689,1.6,1.131,0.0,-0.4,-0.461,-0.635,-0.894,-1.2,-1.483,-1.6,-1.354,-0.689,0.0,0.689])*scale

    Xvrt[32,0:nvrt[32]+3]=asarray([-0.571,-0.64,-0.571,-0.369,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.6,1.131,0.0,-0.571,-0.64,-0.571])*scale
    Yvrt[32,0:nvrt[32]+3]=asarray([-0.689,0.0,0.689,1.354,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.0,-1.131,-1.6,-0.689,0.0,0.689])*scale

    Xvrt[33,0:nvrt[33]+3]=asarray([-1.131,-1.6,-1.2,-0.894,-0.635,-0.461,-0.4,0.0,1.131,1.6,1.131,0.0,-1.131,-1.6,-1.2])*scale
    Yvrt[33,0:nvrt[33]+3]=asarray([-1.131,0.0,0.4,0.461,0.635,0.894,1.2,1.6,1.131,0.0,-1.131,-1.6,-1.131,0.0,0.4])*scale

    Xvrt[34,0:nvrt[34]+3]=asarray([-1.131,-1.6,-1.2,-0.894,-0.635,-0.461,-0.4,-0.283,0.0,0.283,0.4,0.461,0.635,0.894,1.2,1.6,1.131,0.0,-1.131,-1.6,-1.2])*scale
    Yvrt[34,0:nvrt[34]+3]=asarray([-1.131,0.0,0.4,0.461,0.635,0.894,1.2,1.483,1.6,1.483,1.2,0.894,0.635,0.461,0.4,0.0,-1.131,-1.6,-1.131,0.0,0.4])*scale

    Xvrt[35,0:nvrt[35]+3]=asarray([-1.2,-1.6,-1.131,0.0,1.131,1.6,1.2,0.74,0.351,0.1,0.0,-0.1,-0.351,-0.74,-1.2,-1.6,-1.131])*scale
    Yvrt[35,0:nvrt[35]+3]=asarray([-0.4,0.0,1.131,1.6,1.131,0.0,-0.4,-0.5,-0.751,-1.14,-1.6,-1.14,-0.751,-0.5,-0.4,0.0,1.131])*scale

    smp= float(smp)   # sampling density now passed in from cuetask to cueshape to here. try antialiasing next.
    i = 0
    ip = arange(smp)/smp 
    incr = zeros((4,int(smp)), Float)
    incr[0,:] = -ip*ip*ip+3*ip*ip-3*ip+1
    incr[1,:] = 3*ip*ip*ip-6*ip*ip+4
    incr[2,:] = -3*ip*ip*ip+3*ip*ip+3*ip+1
    incr[3,:] = ip*ip*ip
    Xarr = zeros((numstims,max(nvrt)*int(smp)), Float)## array for polygon vertices
    Yarr = zeros((numstims,max(nvrt)*int(smp)), Float)
    xvrtid = zeros((4,int(smp)), Float)
    yvrtid = zeros((4,int(smp)), Float)
    while i < numstims:
        vtx = []
        vty = []
        j = 0
        while j < nvrt[i]:
            k=0
            while k < 4:
                xvrtid[k,:] = Xvrt[i,j+k]
                yvrtid[k,:] = Yvrt[i,j+k]
                k = k+1
            xb = list(sum(xvrtid*incr)/6.0)
            vtx.append(xb)
            yb = list(sum(yvrtid*incr)/6.0)
            vty.append(yb)
            j = j+1
        vtx1 = reshape(array(vtx),(nvrt[i]*int(smp),))
        vty1 = reshape(array(vty),(nvrt[i]*int(smp),))

        Xarr[i,0:nvrt[i]*int(smp)] = vtx1 + 0.5  # adding .5 because anitha does. can't tell if it helps with clipping
        Yarr[i,0:nvrt[i]*int(smp)] = vty1 + 0.5  # took this out to debug... might distort oridistance. can add .5 alter
        i = i+1


    # In order to make tangential lines, need slope along curve...
    # Most of this is just straight up copied from above... only change is blending func (incr)
    di = 0
    dip = arange(smp)/smp 
    dincr = zeros((4,int(smp)), Float)
    dincr[0,:] = -3*dip*dip+6*dip-3
    dincr[1,:] = 9*dip*dip-12*dip
    dincr[2,:] = -9*dip*dip+6*dip+3
    dincr[3,:] = 3*dip*dip
    dXarr = zeros((numstims,max(nvrt)*int(smp)), Float)## array for polygon vertices
    dYarr = zeros((numstims,max(nvrt)*int(smp)), Float)
    dxvrtid = zeros((4,int(smp)), Float)
    dyvrtid = zeros((4,int(smp)), Float)
    while di < numstims:
        dvtx = []
        dvty = []
        j = 0
        while j < nvrt[di]:
            k=0
            while k < 4:
                dxvrtid[k,:] = Xvrt[di,j+k]
                dyvrtid[k,:] = Yvrt[di,j+k]
                k = k+1
            dxb = list(sum(dxvrtid*dincr)/6.0)
            dvtx.append(dxb)
            dyb = list(sum(dyvrtid*dincr)/6.0)
            dvty.append(dyb)
            j = j+1
        dvtx1 = reshape(array(dvtx),(nvrt[di]*int(smp),))
        dvty1 = reshape(array(dvty),(nvrt[di]*int(smp),))

        dXarr[di,0:nvrt[di]*int(smp)] = dvtx1 #+ 0.5  # adding .5 because anitha does. can't tell if it helps with clipping
        dYarr[di,0:nvrt[di]*int(smp)] = dvty1 #+ 0.5  # took this out to debug... might distort oridistance. can add .5 alter
        di = di+1
    
    return Xarr, Yarr, nvrt, dXarr, dYarr, numrot_list

